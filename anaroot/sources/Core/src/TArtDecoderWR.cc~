/*
 * @file TArtDecoderWR.cc
 * modified by J. Park for IDATEN 2024
 */
#include "TArtDecoderWR.hh"
#include "TArtDecoderFactory.hh"
#include "TArtCore.hh"
#include <stdio.h>
TArtDecoderWR::TArtDecoderWR()
   : TArtDecoder(kID) {
}

TArtDecoderWR::~TArtDecoderWR()
{
}

TArtDecoder* TArtDecoderWR::Instance()
{
   static TArtDecoderWR instance;
   return &instance;
}

int TArtDecoderWR::Decode(unsigned char* &buf, const unsigned int& size,
                               TArtRawSegmentObject* rawseg)
{

   unsigned int *evtdata = (unsigned int*) buf;
   unsigned int evtsize = size/sizeof(unsigned int);
   int igeo, ich, idata;


  unsigned int ts0, ts1 = size;

  unsigned long long int timestamp = 0; 
  memcpy((char *)&timestamp, buf, sizeof(timestamp));
  timestamp = timestamp<<16; 
  timestamp = timestamp>>16; 
  ts0 = timestamp>>32; 
  ts1 = timestamp & 0xffffffff; 

  // first 16bit is in ts0 and last 32bit is in ts1
  // original timestamp can be driven from 
  // unsigned long long int ts = ts0;
  // TArtCore::Info("TArtDecoderLUPO","ts: %lld",(ts<<32)+ts1);

  // 10nsec step timestamp can be driven from
  // TArtCore::Info("TArtDecoderLUPO","ts: %lld",((ts<<32)+ts1)>>4);

  TArtRawDataObject *rdata0 = new TArtRawDataObject(0,0,ts0);
  rawseg->PutData(rdata0);
  TArtRawDataObject *rdata1 = new TArtRawDataObject(0,1,ts1);
  rawseg->PutData(rdata1);
  return 0;


//    for (int i=0; i<(int)evtsize; i++) {
// //      ich = evtdata[i]&0xf;
//       ich = i;
//       igeo = 0;
//       idata = evtdata[i];
//       TArtRawDataObject *rdata = new TArtRawDataObject(igeo,ich,idata);
//       rawseg->PutData(rdata);
//    }

//    return 0;

}
